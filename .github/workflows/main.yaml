# I mostly copied this straight from here:
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images

# oscar's tests, etc. run during image build, so that's all this pipeline does

name: main

on:
  push:
    branches: ["**"]

jobs:
  main:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Install system packages
        run: |
          apt-get update
          apt-get install -y \
            curl \
            make
      - name: Run CI
        run: make ci

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Log in to GHCR
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # # Generate any tags we want for the images (https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md)
      # - name: Extract metadata (tags, labels) for OCI image
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ghcr.io/opensourcecorp/oscar
      #     tags: |
      #       type=sha

      # # non-mainline
      # - name: Build and push non-mainline OCI image
      #   if: github.ref != 'refs/heads/main'
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: Containerfile
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}

      # # mainline
      # - name: Build and push mainline OCI image
      #   if: github.ref == 'refs/heads/main'
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: .
      #     file: Containerfile
      #     push: true
      #     tags: ghcr.io/opensourcecorp/oscar:latest
